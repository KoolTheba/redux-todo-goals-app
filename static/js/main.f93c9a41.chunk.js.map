{"version":3,"sources":["components/List.js","actions/todos.js","components/Todos.js","actions/goals.js","components/Goals.js","components/App.js","actions/shared.js","reducers/index.js","reducers/todos.js","reducers/goals.js","reducers/loading.js","middleware/checker.js","middleware/logger.js","middleware/index.js","index.js"],"names":["List","props","className","items","map","item","key","id","onClick","toggle","style","textDecoration","complete","name","remove","icon","faTrashAlt","addTodo","todo","type","toggleTodo","Todos","input","React","dispatch","useDispatch","todos","useSelector","state","placeholder","ref","e","value","cb","preventDefault","current","API","saveTodo","then","catch","alert","deleteTodo","handleDeleteTodo","saveTodoToggle","handleToggle","addGoal","goal","Goals","goals","saveGoal","deleteGoal","handleDeleteGoal","App","loading","Promise","all","fetchTodos","fetchGoals","receiveData","combineReducers","action","concat","filter","Object","assign","checker","store","next","toLowerCase","indexOf","logger","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f93c9a41.chunk.js","sourcesContent":["import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport './List.css'\n\nexport default function List(props){\n    return(\n        <ul className='ItemList'>\n            {props.items.map((item) => (\n                <li className='Item' key={item.id}>\n                    <span \n                        onClick={() => props.toggle && props.toggle(item.id)}\n                        style={{textDecoration:\n                            item.complete\n                            ? 'line-through' \n                            : 'none' }}\n                    >{item.name}\n                    </span>\n                    <button\n                        className='remove-btn'\n                        onClick={() => props.remove(item)}\n                    ><FontAwesomeIcon icon={faTrashAlt} />\n                    </button>\n                </li>\n            ))}\n        </ul>\n    )\n}","import API from 'goals-todos-api'\n\nexport const ADD_TODO = 'ADD_TODO'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\n\nfunction addTodo(todo){\n    return{\n        type: ADD_TODO,\n        todo,\n    }\n}\n\nfunction removeTodo(id){\n    return {\n        type: REMOVE_TODO,\n        id,\n    }\n}\n\nfunction toggleTodo(id){\n    return {\n        type: TOGGLE_TODO,\n        id,\n    }\n}\n\nexport function handleDeleteTodo (todo) {\n    return (dispatch) => {\n        dispatch(removeTodo(todo.id))\n        return API.deleteTodo(todo.id)\n            .catch(() => {\n                dispatch(addTodo(todo))\n                alert('An error ocurred. Try again!')\n            })\n    }\n}\n\nexport function handleAddTodo (value, cb){\n    return (dispatch) => {\n        return API.saveTodo(value)\n        .then((todo) => {\n            dispatch(addTodo(todo))\n            cb()\n        })\n        .catch(() => alert('There was an error. Try again!'))\n    }\n}\n\nexport function handleToggle (id){\n    return (dispatch) => {\n        dispatch(toggleTodo(id))\n        return API.saveTodoToggle((id))\n            .catch(() => {\n                dispatch(toggleTodo(id))\n                alert('An error ocurred. Try again!')\n        })\n    }\n}","import * as React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport List from './List'\nimport {\n    handleAddTodo,\n    handleDeleteTodo,\n    handleToggle\n} from '../actions/todos'\nimport './Todos.css'\n\nexport default function Todos(){\n    const input = React.useRef('')\n    const dispatch = useDispatch()\n    const todos = useSelector((state) => state.todos)\n\n    const addItem = (e) => {\n        e.preventDefault()\n        dispatch(handleAddTodo(\n            input.current.value,\n            () => input.current.value = ''\n        ))\n    }\n\n    const removeItem = (todo) => dispatch(handleDeleteTodo(todo))\n\n    const toggleItem = (id) => dispatch(handleToggle(id))\n\n    return(\n        <div className='Todos'>\n        <h3>Todos</h3>\n        <input\n            className='todo-input'\n            type='text'\n            placeholder='Add Todo'\n            ref={input}\n        />\n        <button\n            className='add-todo'\n            onClick={addItem}\n        >Add Todo\n        </button>\n        <List \n            items={todos}\n            remove={removeItem}\n            toggle={toggleItem}\n        />\n        </div>\n    )\n}","import API from 'goals-todos-api'\n\nexport const ADD_GOAL = 'ADD_GOAL'\nexport const REMOVE_GOAL = 'REMOVE_GOAL'\n\nfunction addGoal(goal){\n    return {\n        type: ADD_GOAL,\n        goal,\n    }\n}\n\nfunction removeGoal(id){\n    return {\n        type: REMOVE_GOAL,\n        id,\n    }\n}\n\nexport function handleDeleteGoal (goal) {\n    return (dispatch) => {\n        dispatch(removeGoal(goal.id))\n        return API.deleteGoal((goal.id))\n        .catch(() => {\n            dispatch(addGoal(goal))\n            alert('An error occurred. Try again!')\n        })\n    }\n}\n\nexport function handleAddGoal (value, cb) {\n    return (dispatch) => {\n        return API.saveGoal(value)\n        .then((goal) => {\n            dispatch(addGoal(goal))\n            cb()\n        })\n        .catch(() => alert('There was an error. Try again!'))\n    }\n}","import * as React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport List from './List'\nimport {\n    handleAddGoal,\n    handleDeleteGoal,\n} from '../actions/goals'\nimport './Goals.css'\n\nexport default function Goals (){\n    const input = React.useRef('')\n    const goals = useSelector((state) => state.goals)\n    const dispatch = useDispatch()\n\n    const addItem = (e) => {\n        e.preventDefault()\n        dispatch(handleAddGoal(\n            input.current.value,\n            () => input.current.value = ''\n        ))\n    }\n\n    const removeItem = (goal) => dispatch(handleDeleteGoal(goal))\n\n    return(\n        <div className='Todos'>\n            <h3>Goals</h3>\n            <input\n                className='goals-input'\n                type='text'\n                placeholder='Add Goal'\n                ref={input}\n            />\n            <button \n                className='add-goal' \n                onClick={addItem}\n            >Add Goal\n            </button>\n            <List\n                items={goals}\n                remove={removeItem} \n            />\n        </div>\n    )\n}","import * as React from 'react'\nimport ConnectedTodos from './Todos'\nimport ConnectedGoals from './Goals'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport './App.css'\n\nexport default function App (){\n  const dispatch = useDispatch()\n  const loading = useSelector((state) => state.loading)\n\n  React.useEffect(() => {\n    dispatch(handleInitialData())\n  }, [dispatch])\n\n  if(loading){\n    return <h3>Loading...</h3>\n  }\n\n  return (\n      <div className='App'>\n        <h1>Todo/Goals App</h1>\n        <h5>Add and remove your todos and goals to your lists</h5>\n        <h5>Also, you can toggle you todos</h5>\n      <ConnectedTodos/>\n      <ConnectedGoals/>   \n      </div>\n  )\n}","import API from 'goals-todos-api'\n\nexport const RECEIVE_DATA = 'RECEIVE_DATA'\n\nexport function receiveData (todos, goals){\n    return {\n        type: RECEIVE_DATA,\n        todos,\n        goals\n    }\n}\n\nexport function handleInitialData () {\n    return (dispatch) => {\n        return Promise.all([\n            API.fetchTodos(),\n            API.fetchGoals(),\n        ]).then(([todos, goals]) => {\n            dispatch(receiveData(todos, goals))\n        })\n    }\n}","import { combineReducers } from 'redux'\n\nimport todos from './todos'\nimport loading from './loading'\nimport goals from './goals'\n\nexport default combineReducers({\n    todos,\n    goals,\n    loading\n})","import {\n    ADD_TODO,\n    REMOVE_TODO,\n    TOGGLE_TODO\n} from '../actions/todos'\nimport { RECEIVE_DATA } from '../actions/shared'\n\n\nexport default function todos (state = [], action) {\n    switch(action.type){\n        case ADD_TODO:\n            return state.concat([action.todo])\n        case REMOVE_TODO:\n            return state.filter(todo => todo.id !== action.id)\n        case TOGGLE_TODO:\n            return state.map(todo => todo.id !== action.id ? todo : \n                Object.assign({}, todo, {complete: !todo.complete})    \n            )\n        case RECEIVE_DATA:\n            return action.todos\n        default:\n            return state\n    }\n}","import { ADD_GOAL, REMOVE_GOAL } from '../actions/goals'\nimport { RECEIVE_DATA } from '../actions/shared'\n\nexport default function goals (state = [], action){\n    switch(action.type){\n        case ADD_GOAL:\n            return state.concat([action.goal])\n        case REMOVE_GOAL:\n            return state.filter(goal => goal.id !== action.id)\n        case RECEIVE_DATA:\n            return action.goals\n        default:\n            return state\n    }\n}","import { RECEIVE_DATA } from '../actions/shared'\n\nexport default function loading (state = true, action){\n    switch(action.type){\n        case RECEIVE_DATA:\n            return false\n        default:\n            return state\n    }\n}","import { ADD_GOAL } from '../actions/goals'\nimport { ADD_TODO } from '../actions/todos'\n\nconst checker = (store) => (next) => (action) => {\n    if(\n        action.type === ADD_TODO &&\n        action.todo.name.toLowerCase().indexOf('bitcoin') !== -1\n    ){\n        return alert('Nope! its a bad idea')\n    }\n\n    if(\n        action.type === ADD_GOAL &&\n        action.goal.name.toLowerCase().indexOf('bitcoin') !== -1\n    ){\n        return alert('Nope! its a bad idea')\n    }\n\n    return next(action)\n}\n\nexport default checker","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The action: ', action)\n    const result = next(action)\n    console.log('The new state: ', store.getState())\n    console.groupEnd()\n\n    return result\n}\n\nexport default logger","import checker from './checker'\nimport logger from './logger'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk, \n    checker, \n    logger\n)\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './components/App'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}